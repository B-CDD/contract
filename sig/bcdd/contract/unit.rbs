module BCDD::Contract
  module Unit
    class Checking
      include Core::Checking

      def initialize: (::Proc, untyped) -> void

      def errors_message: () -> ::String
    end

    module Checker
      include Core::Checker

      SequenceMapper: ::Proc

      def & : (untyped) -> Module

      ParallelMapper: ::Proc

      def | : (untyped) -> Module
    end

    class Factory
      include ::Singleton

      private attr_reader cache: Hash[::Module, ::Module]

      def self.instance: () -> Factory

      def initialize: () -> void

      def build: (untyped) -> untyped
      def unit: (untyped) -> untyped
      def type: (untyped) -> untyped
      def new: (untyped) -> untyped
    end

    def self.new: (untyped) -> ::Module
  end
end
