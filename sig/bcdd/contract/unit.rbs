module BCDD::Contract::Unit
  class Checking
    attr_reader errors: ::Array[::String]

    attr_reader value: untyped

    def initialize: (::Proc, untyped) -> void

    def valid?: () -> bool
    def invalid?: () -> bool

    alias errors? invalid?

    def errors_message: () -> ::String

    def raise_validation_errors!: () -> void

    def value_or_raise_validation_errors!: () -> untyped

    alias value! value_or_raise_validation_errors!
  end

  module Checker
    def []: (untyped) -> Checking

    def ===: (untyped) -> bool

    def to_proc: () -> ::Proc

    SequenceMapper: ::Proc

    def & : (untyped) -> Module

    def invariant: (untyped) { (untyped) -> untyped } -> untyped

    attr_reader checker: ::Proc

    def setup: (Proc) -> void
  end

  class Factory
    include ::Singleton

    private attr_reader cache: Hash[::Module, ::Module]

    def self.instance: () -> Factory

    def initialize: () -> void

    def call: (untyped) -> untyped
    def unit: (untyped) -> untyped
    def type: (untyped) -> untyped
  end

  def self.new: (untyped) -> ::Module

  def self.[]: (untyped) -> ::Module
end
